"use strict";var express=require("express"),mongoose=require("mongoose"),cors=require("cors"),UserModel=require("./models/Users");mongoose.connect("mongodb+srv://crud2:crud2@cluster0.z96irs3.mongodb.net/").then(function(){console.log("connected to mongoDB")}).catch(function(e){console.log(e)});var app=express();app.use(cors()),app.use(express.json()),app.get("/",function(e,n){UserModel.find({}).then(function(e){return n.json(e)}).catch(function(e){return n.json(e)})}),app.get("/getUser/:id",function(e,n){var o=e.params.id;UserModel.findById({_id:o}).then(function(e){return n.json(e)}).catch(function(e){return n.json(e)})}),app.delete("/deleteUser/:id",function(e,n){var o=e.params.id;UserModel.findByIdAndDelete(o).then(function(e){if(!e)return n.status(404).json({error:"User not found"});n.json({message:"User deleted successfully",user:e})}).catch(function(e){return n.status(500).json({error:e.message})})}),app.put("/updateUser/:id",function(e,n){var o=e.params.id;UserModel.findByIdAndUpdate(o,{name:e.body.name,email:e.body.email,age:e.body.age},{new:!0}).then(function(e){return n.json(e)}).catch(function(e){return n.json(e)})}),app.post("/createUser",function(e,n){UserModel.create(e.body).then(function(e){return n.json(e)}).catch(function(e){return n.json(e)})}),app.listen(3e3,function(){console.log("Server listening on port 3000")});
//# sourceMappingURL=index.min.js.map

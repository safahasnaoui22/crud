{"version":3,"sources":["index.js"],"names":["express","require","mongoose","UserModel","connect","then","console","log","err","app","use","cors","req","res","find","users","json","get","id","params","findById","findByIdAndDelete","user","error","message","status","name","body","email","age","findByIdAndUpdate","listen"],"mappings":"aAAA,IAAMA,QAAUC,QAAS,WACnBC,SAAWD,QAAQ,YADnBD,KAAOC,QAAU,QAGjBE,UAAYF,QAAQ,kBAF1BC,SAIGE,QAAQ,2DAHXC,KAAU,WAKNC,QAAQC,IAAI,0BANhB,MAQS,SAACC,GALVN,QACGE,IADHI,KAMIF,IAAAA,IAAQC,UACTE,IAPHC,IAAAC,QASAF,IAAMA,IAAGT,QAAGA,QAEZS,IAAIC,IAAIV,IAAAA,SAAOY,EAAPC,GAERJ,UAAAK,KAAc,IACZX,KAAAA,SAAAA,GAAUW,OAAKD,EACdR,KAAKU,KAFRN,MAEa,SAAAD,GAAIK,OAAIG,EAAKD,KAATP,OAEhBC,IAJDQ,IAAA,eAAA,SAAAL,EAAAC,GAOAJ,IAAQS,EAAAN,EAAAO,OAAiBD,GACvBf,UAAWS,SAAA,CAAWM,IAAtBA,IACAf,KAAAA,SAAAA,GAAUiB,OAAAA,EAASJ,KAAAD,KADnB,MACwBG,SAAAA,GAAAA,OAAAA,EAAAA,KAAAA,OACbT,IADX,OAAA,kBAEU,SAAAG,EAAAC,GAAA,IAAAK,EAAIL,EAAIG,OAARE,GAAAf,UAFVkB,kBAAAH,GAFFb,KAAA,SAAAiB,GAOG,IAAAA,EACO,OAAOH,EAAAA,OAAf,KAAAH,KAAA,CAAAO,MAAA,mBAGIV,EAAKS,KAAM,CAAAE,QAAA,4BAAAF,KAAAA,MAPL,MAQ0BC,SAAAA,GAAK,OAAEV,EAAAY,OAAA,KAAAT,KAAA,CAAAO,MAAAf,EAAAgB,cAEvCX,IAAAA,IAAIG,kBAAK,SAAAJ,EAAAC,GAAEW,IAAAA,EAAOZ,EAAEO,OAAAD,GAA6BI,UAAAA,kBAAAA,EAAAA,CAAxCI,KAATd,EAAAe,KAAAD,KALJE,MAAAhB,EAOSe,KAAAC,MAAGC,IAAAjB,EAAIC,KAAIY,KAAmBF,CAAAA,KAAK,IAA5BlB,KAAJ,SAAAiB,GAAA,OAAAT,EAAAG,KAAAM,KAFyCA,MALrD,SAAAd,GAAA,OAAAK,EAAAG,KAAAR,OAaAL,IAAAA,KAAAA,cAAU2B,SAAAA,EAAVjB,GACEa,UAAUC,OAAKD,EADeC,MAE9BC,KAAK,SAAAb,GAAMY,OAAJd,EAASe,KAFcb,KAC9BW,MAEKd,SAAAA,GAAIe,OAAKE,EAAAA,KAAAA,OACbpB,IAJHsB,OAKQ,IAAA,WAAIzB,QAAIO,IAAIG","file":"index.min.js","sourcesContent":["const express = require ('express')\r\nconst mongoose = require('mongoose')\r\nconst cors = require('cors')\r\nconst UserModel = require('./models/Users')\r\nmongoose\r\n  .connect(\"mongodb+srv://crud2:crud2@cluster0.z96irs3.mongodb.net/\")\r\n  .then(() => {\r\n    console.log(\"connected to mongoDB\");\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\nconst app = express ()\r\napp.use(cors())\r\napp.use(express.json())\r\n\r\napp.get('/' , (req , res) => {\r\n  UserModel.find({})\r\n  .then(users => res.json(users))\r\n  .catch(err => res.json(err))\r\n})\r\n\r\n\r\napp.get('/getUser/:id' , (req , res) => {\r\n  const id = req.params.id;\r\n  UserModel.findById({_id:id})\r\n  .then(users => res.json(users))\r\n  .catch(err => res.json(err))\r\n})\r\n\r\napp.delete('/deleteUser/:id', (req, res) => {\r\n  const id = req.params.id;\r\n  UserModel.findByIdAndDelete(id)\r\n    .then(user => {\r\n      if (!user) {\r\n        return res.status(404).json({ error: 'User not found' });\r\n      }\r\n      res.json({ message: 'User deleted successfully', user });\r\n    })\r\n    .catch(err => res.status(500).json({ error: err.message }));\r\n});\r\n\r\n\r\napp.put('/updateUser/:id', (req, res) => {\r\n  const id = req.params.id;\r\n  UserModel.findByIdAndUpdate(id, {\r\n    name: req.body.name,\r\n    email: req.body.email,\r\n    age: req.body.age\r\n  }, { new: true })\r\n    .then(user => res.json(user))\r\n    .catch(err => res.json(err));\r\n});\r\n\r\n\r\napp.post(\"/createUser\" , (req , res) => {\r\n    UserModel.create(req.body)\r\n    .then(users => res.json(users))\r\n    .catch(err => res.json(err))\r\n})\r\n\r\napp.listen(3000, () => {\r\n    console.log(\"Server listening on port 3000\");\r\n  });"]}